name: Build and Publish

on:
  push:
    branches: [main]
    tags: ["v*"]
    paths:
      - "**.go"
      - go.mod
      - go.sum
  pull_request:
    branches: [main]
    paths:
      - "**.go"
      - go.mod
      - go.sum

env:
  KO_DOCKER_REPO: ghcr.io/${{ github.repository }}/controller
  KO_CONFIG_PATH: .ko-ci.yaml

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Install Dependencies
        run: |
          go mod download

      - name: Run Tests
        run: go test -v ./pkg/...

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Release Version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            # Trim the 'v' prefix from the tag
            echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          else
            echo "RELEASE_VERSION=dev-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          fi
          echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      # Build and push image on push to main
      - name: Build and Push Image
        if: github.event_name != 'pull_request'
        run: >-
          go tool ko build
            --bare
            github.com/kro-run/kro/cmd/controller
            --tags $RELEASE_VERSION
            --sbom=none

      # Build image only on PR
      - name: Build Image (PR)
        if: github.event_name == 'pull_request'
        run: >-
          go tool ko build
            --bare
            github.com/kro-run/kro/cmd/controller
            --tags $RELEASE_VERSION
            --sbom=none
            --push=false

      # Push helm chart only on tag
      - name: Package and Push Helm Chart
        if: github.ref_type == 'tag'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin
          sed -i "s/tag: \".*\"/tag: \"$RELEASE_VERSION\"/ helm/values.yaml
          helm package helm --version $RELEASE_VERSION --app-version $RELEASE_VERSION
          helm push ./kro-$RELEASE_VERSION.tgz oci://ghcr.io/${{ github.repository }}
